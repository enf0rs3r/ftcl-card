from aiogram import Router, types
import asyncio
from database.db import get_user_collection

router = Router()

async def get_user_collection_async(user_id):
    loop = asyncio.get_running_loop()
    return await loop.run_in_executor(None, get_user_collection, user_id)

@router.message(lambda message: message.text == "üé¥ –ö–æ–ª–ª–µ–∫—Ü–∏—è")
async def collection_handler(message: types.Message):
    user_id = message.from_user.id
    collection = await get_user_collection_async(user_id)
    response_text = "üìú –í–∞—à–∞ –∫–æ–ª–ª–µ–∫—Ü–∏—è:\n\n"

    if not collection or not any(collection.values()):
        response_text = "‚ùå –í–∞—à–∞ –∫–æ–ª–ª–µ–∫—Ü–∏—è –ø—É—Å—Ç–∞."
        await message.answer(response_text, parse_mode="Markdown")
        return

    for rarity, cards in collection.items():
        if cards:
            if rarity == "–ª–µ–≥–µ–Ω–¥–∞—Ä–Ω–∞—è":
                rarity_display = rarity[:-2] + "—ã–µ"
            elif rarity == "—ç–ø–∏—á–µ—Å–∫–∞—è":
                rarity_display = rarity[:-2] + "–∏–µ"
            elif rarity == "—Ä–µ–¥–∫–∞—è":
                rarity_display = rarity[:-2] + "–∏–µ"
            elif rarity == "–æ–±—ã—á–Ω–∞—è":
                rarity_display = rarity[:-2] + "—ã–µ"
            else:
                rarity_display = rarity

            response_text += f"üî• *{rarity_display.capitalize()} –∫–∞—Ä—Ç—ã:*\n" + "\n".join(cards) + "\n\n"

    await message.answer(response_text, parse_mode="Markdown")
