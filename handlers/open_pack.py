import json
import random
from aiogram import Router, F
from aiogram.types import Message, FSInputFile
from aiogram.filters import Command
from database.db import add_card_to_collection, get_last_open_time, update_last_open_time
from datetime import datetime, timedelta

router = Router()

# –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–∞–∫–∞—Ö
def load_packs():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø–∞–∫–æ–≤ –∏–∑ packs.json"""
    with open("data/packs.json", "r", encoding="utf-8") as file:
        return json.load(file)  # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–∞–∫ —Å–ø–∏—Å–æ–∫

packs = load_packs()
PACK_COOLDOWN = timedelta(hours=packs["normal_pack"]["interval"])  # 7 —á–∞—Å–æ–≤

def load_cards():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –∫–∞—Ä—Ç–æ—á–∫–∏ –∏–∑ cards.json"""
    with open("data/cards.json", "r", encoding="utf-8") as file:
        return json.load(file)

def get_random_card():
    """–í—ã–±–∏—Ä–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—É—é –∫–∞—Ä—Ç—É —Å —É—á–µ—Ç–æ–º —à–∞–Ω—Å–æ–≤ —Ä–µ–¥–∫–æ—Å—Ç–∏"""
    cards = load_cards()
    rarity_chances = packs["normal_pack"]["chances"]

    rarity = random.choices(
        list(rarity_chances.keys()),
        weights=rarity_chances.values(),
        k=1
    )[0]

    filtered_cards = [card for card in cards if card["rarity"] == rarity]

    return random.choice(filtered_cards) if filtered_cards else None

@router.message(Command("open_pack"))
async def open_pack(message: Message):
    """–û—Ç–∫—Ä—ã—Ç–∏–µ –æ–±—ã—á–Ω–æ–≥–æ –ø–∞–∫–∞"""
    user_id = message.from_user.id
    last_open_time = get_last_open_time(user_id)

    if last_open_time:
        last_open_time = datetime.strptime(last_open_time, "%Y-%m-%d %H:%M:%S.%f")
        remaining_time = PACK_COOLDOWN - (datetime.now() - last_open_time)

        if remaining_time > timedelta(0):
            hours, remainder = divmod(remaining_time.seconds, 3600)
            minutes = remainder // 60
            await message.answer(f"‚åõ –í—ã –Ω–µ–¥–∞–≤–Ω–æ –æ—Ç–∫—Ä—ã–≤–∞–ª–∏ –ø–∞–∫. –ü–æ–¥–æ–∂–¥–∏—Ç–µ –µ—â—ë {hours} —á {minutes} –º–∏–Ω!")
            return

    card = get_random_card()

    if not card:
        await message.answer("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –ø–∞–∫, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        return

    update_last_open_time(user_id)
    add_card_to_collection(user_id, card["card_id"])

    card_image = FSInputFile(f"photo/{card['card_id']}.jpg")
    caption = f"üé¥ <b>{card['name']}</b>\n‚≠ê –†–µ–¥–∫–æ—Å—Ç—å: {card['rarity'].capitalize()}\nüèÜ ID –∫–∞—Ä—Ç—ã: {card['card_id']}\nüî• –†–µ–π—Ç–∏–Ω–≥: {card['rating']}"

    await message.answer_photo(card_image, caption=caption)
