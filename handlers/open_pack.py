import json
import random
from aiogram import Router, F
from aiogram.types import Message, FSInputFile
from aiogram.filters import Command
from database.db import add_card_to_collection, get_last_open_time, update_last_open_time
from datetime import datetime, timedelta

router = Router()

# –®–∞–Ω—Å—ã –≤—ã–ø–∞–¥–µ–Ω–∏—è —Ä–µ–¥–∫–æ—Å—Ç–∏
RARITY_CHANCES = {
    "common": 70,
    "rare": 17,
    "epic": 10,
    "legendary": 3
}

# –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –º–µ–∂–¥—É –æ—Ç–∫—Ä—ã—Ç–∏—è–º–∏
PACK_COOLDOWN = timedelta(hours=10)

def load_cards():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –∫–∞—Ä—Ç–æ—á–∫–∏ –∏–∑ cards.json"""
    with open("data/cards.json", "r", encoding="utf-8") as file:
        return json.load(file)

def get_random_card():
    """–í—ã–±–∏—Ä–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—É—é –∫–∞—Ä—Ç—É —Å —É—á—ë—Ç–æ–º —à–∞–Ω—Å–æ–≤ —Ä–µ–¥–∫–æ—Å—Ç–∏"""
    cards = load_cards()
    
    # –í—ã–±–∏—Ä–∞–µ–º —Ä–µ–¥–∫–æ—Å—Ç—å –ø–æ —à–∞–Ω—Å–∞–º
    rarity = random.choices(
        list(RARITY_CHANCES.keys()),
        weights=RARITY_CHANCES.values(),
        k=1
    )[0]
    
    # –§–∏–ª—å—Ç—Ä—É–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏ –ø–æ —Ä–µ–¥–∫–æ—Å—Ç–∏
    filtered_cards = [card for card in cards if card["rarity"] == rarity]
    
    if not filtered_cards:
        return None  # –ï—Å–ª–∏ –≤–¥—Ä—É–≥ –∫–∞—Ä—Ç–æ—á–µ–∫ —Å —Ç–∞–∫–æ–π —Ä–µ–¥–∫–æ—Å—Ç—å—é –Ω–µ—Ç
    
    return random.choice(filtered_cards)

@router.message(Command("open_pack"))
async def open_pack(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /open_pack"""
    user_id = message.from_user.id
    last_open_time = get_last_open_time(user_id)
    
    if last_open_time:
        last_open_time = datetime.strptime(last_open_time, "%Y-%m-%d %H:%M:%S.%f")
        remaining_time = PACK_COOLDOWN - (datetime.now() - last_open_time)

        if remaining_time > timedelta(0):  # –ï—Å–ª–∏ –≤—Ä–µ–º—è –µ—â—ë –Ω–µ –≤—ã—à–ª–æ
            hours, remainder = divmod(remaining_time.seconds, 3600)
            minutes = remainder // 60
            await message.answer(f"‚åõ –í—ã –Ω–µ–¥–∞–≤–Ω–æ –æ—Ç–∫—Ä—ã–≤–∞–ª–∏ –ø–∞–∫. –ü–æ–¥–æ–∂–¥–∏—Ç–µ –µ—â—ë {hours} —á {minutes} –º–∏–Ω!")
            return

    card = get_random_card()
    
    if not card:
        await message.answer("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –ø–∞–∫, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        return
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç—É –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å
    update_last_open_time(user_id)
    add_card_to_collection(user_id, card["card_id"])
    
    card_image = FSInputFile(f"photo/{card['card_id']}.jpg")
    caption = f"üé¥ <b>{card['name']}</b>\n‚≠ê –†–µ–¥–∫–æ—Å—Ç—å: {card['rarity'].capitalize()}\nüèÜ ID –∫–∞—Ä—Ç—ã: {card['card_id']}\nüî• –†–µ–π—Ç–∏–Ω–≥: {card['rating']}"
    
    await message.answer_photo(card_image, caption=caption)
